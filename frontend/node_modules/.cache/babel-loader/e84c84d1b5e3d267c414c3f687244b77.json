{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Badge extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'badge', Mixins.colorClasses(props));\n    return React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Badge, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps));\n\nF7Badge.displayName = 'f7-badge';\nexport default F7Badge;","map":{"version":3,"sources":["D:/web/webapp/frontend/node_modules/framework7-react/components/badge.js"],"names":["React","Utils","Mixins","__reactComponentWatch","__reactComponentSlots","__reactComponentSetProps","F7Badge","Component","constructor","props","context","__reactRefs","render","className","id","style","classes","classNames","colorClasses","createElement","ref","__reactNode","slots","componentWillUnmount","self","f7Tooltip","destroy","componentDidMount","el","refs","tooltip","tooltipTrigger","$f7ready","f7","create","targetEl","text","trigger","componentDidUpdate","prevProps","prevState","newText","$f7","setText","Object","assign","String","Number","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Badge extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'badge', Mixins.colorClasses(props));\n    return React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Badge, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps));\n\nF7Badge.displayName = 'f7-badge';\nexport default F7Badge;"]},"metadata":{},"sourceType":"module"}