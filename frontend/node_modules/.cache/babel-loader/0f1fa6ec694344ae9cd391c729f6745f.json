{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Icon from './icon';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Chip extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('delete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      media,\n      text,\n      deleteable,\n      className,\n      id,\n      style,\n      mediaTextColor,\n      mediaBgColor,\n      outline,\n      icon,\n      iconMaterial,\n      iconF7,\n      iconMd,\n      iconIos,\n      iconAurora,\n      iconColor,\n      iconSize\n    } = props;\n    let iconEl;\n    let mediaEl;\n    let labelEl;\n    let deleteEl;\n\n    if (icon || iconMaterial || iconF7 || iconMd || iconIos || iconAurora) {\n      iconEl = React.createElement(F7Icon, {\n        material: iconMaterial,\n        f7: iconF7,\n        icon: icon,\n        md: iconMd,\n        ios: iconIos,\n        aurora: iconAurora,\n        color: iconColor,\n        size: iconSize\n      });\n    }\n\n    if (media || iconEl || self.slots && self.slots.media) {\n      const mediaClasses = Utils.classNames('chip-media', mediaTextColor && `text-color-${mediaTextColor}`, mediaBgColor && `bg-color-${mediaBgColor}`);\n      mediaEl = React.createElement('div', {\n        className: mediaClasses\n      }, iconEl, media, this.slots['media']);\n    }\n\n    if (text || self.slots && (self.slots.text || self.slots.default && self.slots.default.length)) {\n      labelEl = React.createElement('div', {\n        className: 'chip-label'\n      }, text, this.slots['text'], this.slots['default']);\n    }\n\n    if (deleteable) {\n      deleteEl = React.createElement('a', {\n        ref: __reactNode => {\n          this.__reactRefs['deleteEl'] = __reactNode;\n        },\n        className: 'chip-delete'\n      });\n    }\n\n    const classes = Utils.classNames(className, 'chip', {\n      'chip-outline': outline\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, mediaEl, labelEl, deleteEl);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    self.refs.el.removeEventListener('click', self.onClick);\n\n    if (self.refs.deleteEl) {\n      self.refs.deleteEl.removeEventListener('click', self.onDeleteClick);\n    }\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    el.addEventListener('click', self.onClick);\n\n    if (self.refs.deleteEl) {\n      self.refs.deleteEl.addEventListener('click', self.onDeleteClick);\n    }\n\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Chip, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  media: String,\n  text: [String, Number],\n  deleteable: Boolean,\n  mediaBgColor: String,\n  mediaTextColor: String,\n  outline: Boolean,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps, {}, Mixins.linkIconProps));\n\nF7Chip.displayName = 'f7-chip';\nexport default F7Chip;","map":{"version":3,"sources":["D:/web/webapp/frontend/node_modules/framework7-react/components/chip.js"],"names":["React","Utils","Mixins","F7Icon","__reactComponentWatch","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7Chip","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","onDeleteClick","render","self","media","text","deleteable","className","id","style","mediaTextColor","mediaBgColor","outline","icon","iconMaterial","iconF7","iconMd","iconIos","iconAurora","iconColor","iconSize","iconEl","mediaEl","labelEl","deleteEl","createElement","material","f7","md","ios","aurora","color","size","slots","mediaClasses","classNames","default","length","ref","__reactNode","classes","colorClasses","componentWillUnmount","refs","el","removeEventListener","f7Tooltip","destroy","componentDidMount","addEventListener","tooltip","tooltipTrigger","$f7ready","create","targetEl","trigger","events","args","componentDidUpdate","prevProps","prevState","newText","$f7","setText","Object","assign","String","Number","Boolean","colorProps","linkIconProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Icon from './icon';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Chip extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('delete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      media,\n      text,\n      deleteable,\n      className,\n      id,\n      style,\n      mediaTextColor,\n      mediaBgColor,\n      outline,\n      icon,\n      iconMaterial,\n      iconF7,\n      iconMd,\n      iconIos,\n      iconAurora,\n      iconColor,\n      iconSize\n    } = props;\n    let iconEl;\n    let mediaEl;\n    let labelEl;\n    let deleteEl;\n\n    if (icon || iconMaterial || iconF7 || iconMd || iconIos || iconAurora) {\n      iconEl = React.createElement(F7Icon, {\n        material: iconMaterial,\n        f7: iconF7,\n        icon: icon,\n        md: iconMd,\n        ios: iconIos,\n        aurora: iconAurora,\n        color: iconColor,\n        size: iconSize\n      });\n    }\n\n    if (media || iconEl || self.slots && self.slots.media) {\n      const mediaClasses = Utils.classNames('chip-media', mediaTextColor && `text-color-${mediaTextColor}`, mediaBgColor && `bg-color-${mediaBgColor}`);\n      mediaEl = React.createElement('div', {\n        className: mediaClasses\n      }, iconEl, media, this.slots['media']);\n    }\n\n    if (text || self.slots && (self.slots.text || self.slots.default && self.slots.default.length)) {\n      labelEl = React.createElement('div', {\n        className: 'chip-label'\n      }, text, this.slots['text'], this.slots['default']);\n    }\n\n    if (deleteable) {\n      deleteEl = React.createElement('a', {\n        ref: __reactNode => {\n          this.__reactRefs['deleteEl'] = __reactNode;\n        },\n        className: 'chip-delete'\n      });\n    }\n\n    const classes = Utils.classNames(className, 'chip', {\n      'chip-outline': outline\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, mediaEl, labelEl, deleteEl);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    self.refs.el.removeEventListener('click', self.onClick);\n\n    if (self.refs.deleteEl) {\n      self.refs.deleteEl.removeEventListener('click', self.onDeleteClick);\n    }\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    el.addEventListener('click', self.onClick);\n\n    if (self.refs.deleteEl) {\n      self.refs.deleteEl.addEventListener('click', self.onDeleteClick);\n    }\n\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Chip, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  media: String,\n  text: [String, Number],\n  deleteable: Boolean,\n  mediaBgColor: String,\n  mediaTextColor: String,\n  outline: Boolean,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps, {}, Mixins.linkIconProps));\n\nF7Chip.displayName = 'f7-chip';\nexport default F7Chip;"]},"metadata":{},"sourceType":"module"}