{
  "library": "react-dual-range-slider",
  "description": "react-dual-range-slider",
  "components": [
    {
      "description": "",
      "displayName": "ReactDualRangeSlider",
      "methods": [
        {
          "name": "getStateFromProps",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "props",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "startToMove",
          "docblock": "startToMove\r\nevent triggered when the user starts to move",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            },
            {
              "name": "index"
            }
          ],
          "returns": null,
          "description": "startToMove\r\nevent triggered when the user starts to move"
        },
        {
          "name": "onMouseDown0",
          "docblock": "onMouseDown1\r\nevent triggered when the user mouse is down on slider 0",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "onMouseDown1\r\nevent triggered when the user mouse is down on slider 0"
        },
        {
          "name": "onMouseDown1",
          "docblock": "onMouseDown1\r\nevent triggered when the user mouse is down on slider 1",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "onMouseDown1\r\nevent triggered when the user mouse is down on slider 1"
        },
        {
          "name": "onTouchStart0",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "event",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "onTouchStart1",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "event",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "onTouchMove",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "event",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "onTouchEnd",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "event",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "onMouseMove",
          "docblock": "onMouseMove\r\nevent triggered when the user moves his mouse",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "onMouseMove\r\nevent triggered when the user moves his mouse"
        },
        {
          "name": "move",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "event",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "getMoveCurrentValue",
          "docblock": "getMoveCurrentValue\r\nreturn the moving current value",
          "modifiers": [],
          "params": [
            {
              "name": "moveCurrentX"
            }
          ],
          "returns": null,
          "description": "getMoveCurrentValue\r\nreturn the moving current value"
        },
        {
          "name": "formatOutput",
          "docblock": "formatOutput\r\nreturn values well formated",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "formatOutput\r\nreturn values well formated"
        },
        {
          "name": "stopToMove",
          "docblock": "stopToMove\r\nevent triggered when the user stop to move",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "stopToMove\r\nevent triggered when the user stop to move"
        },
        {
          "name": "onMouseLeave",
          "docblock": "onMouseLeave\r\nevent triggered when the user leave the area with the mouse",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "onMouseLeave\r\nevent triggered when the user leave the area with the mouse"
        },
        {
          "name": "onMouseUp",
          "docblock": "onMouseUp\r\nevent triggered the user stop to drag a slider with the mouse",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": null,
          "description": "onMouseUp\r\nevent triggered the user stop to drag a slider with the mouse"
        },
        {
          "name": "getLimits",
          "docblock": "getLimits\r\nreturn limits",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "getLimits\r\nreturn limits"
        },
        {
          "name": "getDisplayLimits",
          "docblock": "getDisplayLimits\r\nreturn limits well formated",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "getDisplayLimits\r\nreturn limits well formated"
        },
        {
          "name": "getValues",
          "docblock": "getValues\r\nreturn current values, including when sliding",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "getValues\r\nreturn current values, including when sliding"
        },
        {
          "name": "getDisplayValues",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "getLeftPositions",
          "docblock": "getLeftPositions\r\nreturn left position as a proportion",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "getLeftPositions\r\nreturn left position as a proportion"
        },
        {
          "name": "sortValues",
          "docblock": "sortValues\r\nascending sort method for arrays",
          "modifiers": [],
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "returns": null,
          "description": "sortValues\r\nascending sort method for arrays"
        },
        {
          "name": "onChange",
          "docblock": "onChange\r\ntrigger the onChange method output",
          "modifiers": [],
          "params": [],
          "returns": null,
          "description": "onChange\r\ntrigger the onChange method output"
        }
      ],
      "props": {
        "limits": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "number"
            }
          },
          "required": false,
          "defaultValue": {
            "value": "[0, 100]",
            "computed": false
          },
          "description": ""
        },
        "values": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "number"
            }
          },
          "required": false,
          "defaultValue": {
            "value": "[0, 100]",
            "computed": false
          },
          "description": ""
        },
        "lock": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "bool"
            }
          },
          "required": false,
          "defaultValue": {
            "value": "[false, false]",
            "computed": false
          },
          "description": ""
        },
        "reverse": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        },
        "formatFunc": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function(value) {\r\n  return value;\r\n}",
            "computed": false
          },
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function() {}",
            "computed": false
          },
          "description": ""
        },
        "rangeColor": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "'#f60'",
            "computed": false
          },
          "description": ""
        }
      },
      "fileName": "./src/components/react-dual-range-slider.jsx",
      "hasProps": true
    }
  ]
}